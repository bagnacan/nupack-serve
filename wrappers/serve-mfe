#!/usr/bin/env python3

import common
import io
import pexpect


def mfe(call, sequences):

    result = None

    # spawn a subprocess for the provided call
    p = pexpect.spawn(call, encoding="ascii")

    # suppress echo
    p.setecho(False)

    # interact to provide its input
    p.expect("Enter number of strands")
    p.sendline(str(len(sequences)))
    for sequence in sequences:
        p.expect("Enter sequence for strand type")
        p.sendline(sequence)
    p.expect("Enter strand permutation")
    p.sendline(" ".join([str(x + 1) for x in range(len(sequences))]))

    # start log the subprocess' result
    log = io.StringIO()
    p.logfile = log
    p.expect("{") # starting of JSON string
    log.seek(0)

    # store the result
    result = log.read()
    result = result.replace("\x00", "").replace("\n", "").replace("\r", "")

    log.close()
    p.close()

    return (p.exitstatus, result)



if __name__ == "__main__":
    common.print_license()

    call = "mfe --multi"
    sequences = [
        "GGCTGGTTTCTGCTCTCTAGTTCGCGAGGTGCAATCTCCTATC",
        "GTCTGGGATGCTGGATACTGAACCTAGAGAGCAGAAACCAGCC"
        ]

    (status, result) = mfe(call, sequences)

    print(status)
    print(result)

